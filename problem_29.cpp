/*


Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

    22=4, 23=8, 24=16, 25=32
    32=9, 33=27, 34=81, 35=243
    42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125

If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

*/

#include<iostream>
#include<new>
#include<math.h>

using namespace std;

int main(int argc, char** argv)
{
  int i, j;
  long int powmax, nummax;
  long int *pows;

  if(argc==3){
    nummax = strol(argv[1]);
    powmax = strol(argv[2]);
    thispows = new (nothrow) int[powmax];

    if(thispows == 0){
      cout<<"Error: malloc failed\n";
    } else {
      cout<<"2 "<<endl;
      for(i=2;i<=nummax;i++){
	// for each num gen thispows
	for(j=2;j<=powmax;j++){     
	  // collect the thispows
	  long int temp = pow(i,j);
	  thispows[j-2] = temp;
	  cout<<i<<" "<<j<<" "<<temp<<endl;
	}
	// add it to the overall pows list
      }
      for(i=0;i<powmax;i++)
	cout<<thispows[i]<<" ";
      cout<<endl;
      delete[] thispows;
    }
  } else {
    cout<<"Error: need 2 args: nummax, powmax\n";
  }

  return 0;
}
